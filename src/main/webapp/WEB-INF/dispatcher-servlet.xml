<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
http://www.springframework.org/schema/mvc
http://www.springframework.org/schema/mvc/spring-mvc.xsd
http://www.springframework.org/schema/context
http://www.springframework.org/schema/context/spring-context.xsd">

    <!--
         Configures the location of static resources such as css files.
         Requires Spring Framework 3.0 or higher.
     -->
    <mvc:resources mapping="/static/**" location="/static/"/>
    <mvc:resources mapping="/*.html" location="/"/>

    <!-- InternalResourceViewResolver默认的就是JstlView所以这里就不用配置viewClass了 -->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/WEB-INF/jsp/"/>
        <property name="suffix" value=".jsp"/>
    </bean>
    <!--<bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping"/>-->
    <!--<bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter"/>-->

    <!--使用<context:component-scan>标签来表示需要要自动注册Bean定义，而通过base-package属性指定扫描的类路径位置-->
    <!--<context:annotation-config/>-->
    <!--<context:component-scan-->
    <!--base-package=""-->
    <!--resource-pattern="**/*.class"-->
    <!--name-generator="org.springframework.context.annotation.AnnotationBeanNameGenerator"-->
    <!--use-default-filters="true"-->
    <!--annotation-config="true">-->
    <!--<context:include-filter type="aspectj" expression=""/>-->
    <!--<context:exclude-filter type="regex" expression=""/>-->
    <!--</context:component-scan>-->
    <context:component-scan base-package="com.cos.web"/>
    <mvc:annotation-driven/>

    <!-- 上传拦截，如最大上传值及最小上传值 -->
    <bean id="multipartResolver"
          class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <!-- one of the properties available; the maximum file size in bytes -->
        <!--<property name="maxUploadSize" value="10000000" />-->
    </bean>
</beans>
